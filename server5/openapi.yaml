openapi: 3.0.0
info:
  description: Appointments Service
  title: Appointments OpenAPI
  version: 0.0.1
servers:
- url: /
security:
- bearerAuth: []
paths:
  /Appointments/getAll:
    get:
      parameters:
      - explode: true
        in: query
        name: patientId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      - explode: true
        in: query
        name: order
        required: false
        schema:
          enum:
          - asc
          - desc
          type: string
        style: form
      - explode: true
        in: query
        name: Limit
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentPagedResultDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      tags:
      - Appointments
  /Appointments/getPatientLatestAppointments:
    get:
      parameters:
      - explode: true
        in: query
        name: patientId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
        style: form
      - description: hhmm format
        explode: true
        in: query
        name: time
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: limit
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentPagedResultDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      tags:
      - Appointments
  /Appointments/getAllByDocId:
    get:
      parameters:
      - explode: true
        in: query
        name: doctorId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: date
        required: false
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentPagedResultDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      security: []
      tags:
      - Appointments
  /Appointments/getAllByDocIdAndPatientId:
    get:
      parameters:
      - explode: true
        in: query
        name: patientId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: doctorId
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentPagedResultDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      tags:
      - Appointments
  /Appointments/get:
    get:
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Invalid Inputs
      tags:
      - Appointments
  /Appointments/getSlots:
    get:
      parameters:
      - explode: true
        in: query
        name: doctorId
        required: true
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: date
        required: true
        schema:
          format: date
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_Appointments_getSlots_get_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Invalid Inputs
      security: []
      tags:
      - Appointments
  /Appointments/getStandardSlots:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_Appointments_getSlots_get_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Invalid Inputs
      tags:
      - Appointments
  /Appointments/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentDto'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Invalid Inputs
      tags:
      - Appointments
  /Appointments/update:
    put:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentForUpdateDto'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentForUpdateDto'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Invalid Inputs
      tags:
      - Appointments
  /Appointments/delete:
    delete:
      parameters:
      - explode: true
        in: query
        name: id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_Appointments_delete_delete_200_response'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Invalid Inputs
      tags:
      - Appointments
components:
  parameters:
    patientIdParam:
      explode: true
      in: query
      name: patientId
      required: true
      schema:
        type: string
      style: form
    order:
      explode: true
      in: query
      name: order
      required: false
      schema:
        enum:
        - asc
        - desc
        type: string
      style: form
    doctorId:
      explode: true
      in: query
      name: doctorId
      required: true
      schema:
        type: string
      style: form
    idParam:
      explode: true
      in: query
      name: id
      required: true
      schema:
        type: string
      style: form
    date:
      explode: true
      in: query
      name: date
      required: false
      schema:
        format: date
        type: string
      style: form
    limitParam:
      explode: true
      in: query
      name: Limit
      required: false
      schema:
        type: integer
      style: form
    directionParam:
      explode: true
      in: query
      name: Direction
      required: false
      schema:
        default: asc
        enum:
        - asc
        - desc
        type: string
      style: form
    sortByFieldParam:
      explode: true
      in: query
      name: SortByField
      required: false
      schema:
        nullable: true
        type: string
      style: form
  responses:
    Success:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/_Appointments_delete_delete_200_response'
      description: Success
    ResourceNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageDto'
      description: The specified resource was not found
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageDto'
      description: Unauthorized
    UnAcceptableInputs:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageDto'
      description: Invalid Inputs
  schemas:
    MessageDto:
      properties:
        message:
          title: message
          type: string
      required:
      - message
      title: MessageDto
      type: object
    AppointmentPagedResultDto:
      example:
        totalCount: 0
        items:
        - appointmentType: 6
          patientName: patientName
          patientId: patientId
          appointmentStatus: true
          symptoms: symptoms
          patientImage: patientImage
          createdAt: createdAt
          doctorName: doctorName
          connectyCubeId: connectyCubeId
          createdBy: createdBy
          doctorId: doctorId
          slotTime: slotTime
          slotId: slotId
          id: id
          appointmentDate: 2000-01-23
          doctorImage: doctorImage
          isExist: true
          updatedAt: updatedAt
        - appointmentType: 6
          patientName: patientName
          patientId: patientId
          appointmentStatus: true
          symptoms: symptoms
          patientImage: patientImage
          createdAt: createdAt
          doctorName: doctorName
          connectyCubeId: connectyCubeId
          createdBy: createdBy
          doctorId: doctorId
          slotTime: slotTime
          slotId: slotId
          id: id
          appointmentDate: 2000-01-23
          doctorImage: doctorImage
          isExist: true
          updatedAt: updatedAt
      properties:
        totalCount:
          title: totalCount
          type: integer
        items:
          items:
            $ref: '#/components/schemas/AppointmentDto'
          title: items
          type: array
      title: AppointmentPagedResultDto
      type: object
    AppointmentDto:
      example:
        appointmentType: 6
        patientName: patientName
        patientId: patientId
        appointmentStatus: true
        symptoms: symptoms
        patientImage: patientImage
        createdAt: createdAt
        doctorName: doctorName
        connectyCubeId: connectyCubeId
        createdBy: createdBy
        doctorId: doctorId
        slotTime: slotTime
        slotId: slotId
        id: id
        appointmentDate: 2000-01-23
        doctorImage: doctorImage
        isExist: true
        updatedAt: updatedAt
      properties:
        id:
          title: id
          type: string
        appointmentType:
          title: appointmentType
          type: integer
        appointmentStatus:
          title: appointmentStatus
          type: boolean
        appointmentDate:
          format: date
          title: appointmentDate
          type: string
        slotTime:
          title: slotTime
          type: string
        createdAt:
          format: DateTime
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        doctorId:
          title: doctorId
          type: string
        symptoms:
          title: symptoms
          type: string
        slotId:
          title: slotId
          type: string
        patientId:
          title: patientId
          type: string
        doctorName:
          title: doctorName
          type: string
        doctorImage:
          title: doctorImage
          type: string
        patientImage:
          title: patientImage
          type: string
        patientName:
          title: patientName
          type: string
        updatedAt:
          format: DateTime
          title: updatedAt
          type: string
        isExist:
          title: isExist
          type: boolean
        connectyCubeId:
          title: connectyCubeId
          type: string
      required:
      - appointmentDate
      - appointmentStatus
      - appointmentType
      - createdBy
      - doctorId
      - patientId
      - slotId
      - slotTime
      - symptoms
      title: AppointmentDto
      type: object
    AppointmentForUpdateDto:
      example:
        appointmentType: 0
        patientName: patientName
        patientId: patientId
        appointmentStatus: true
        symptoms: symptoms
        patientImage: patientImage
        createdAt: createdAt
        doctorName: doctorName
        connectyCubeId: connectyCubeId
        createdBy: createdBy
        doctorId: doctorId
        slotTime: slotTime
        slotId: slotId
        id: id
        appointmentDate: 2000-01-23
        doctorImage: doctorImage
        isExist: true
        updatedAt: updatedAt
      properties:
        id:
          title: id
          type: string
        appointmentType:
          title: appointmentType
          type: integer
        appointmentStatus:
          title: appointmentStatus
          type: boolean
        appointmentDate:
          format: date
          title: appointmentDate
          type: string
        slotTime:
          title: slotTime
          type: string
        createdAt:
          format: DateTime
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        doctorId:
          title: doctorId
          type: string
        symptoms:
          title: symptoms
          type: string
        updatedAt:
          format: DateTime
          title: updatedAt
          type: string
        slotId:
          title: slotId
          type: string
        patientId:
          title: patientId
          type: string
        doctorName:
          title: doctorName
          type: string
        doctorImage:
          title: doctorImage
          type: string
        isExist:
          title: isExist
          type: boolean
        patientImage:
          title: patientImage
          type: string
        patientName:
          title: patientName
          type: string
        connectyCubeId:
          title: connectyCubeId
          type: string
      required:
      - id
      title: AppointmentForUpdateDto
      type: object
    _Appointments_getSlots_get_200_response:
      example:
        slots:
        - slots
        - slots
      properties:
        slots:
          items:
            type: string
          title: slots
          type: array
      title: _Appointments_getSlots_get_200_response
      type: object
    _Appointments_delete_delete_200_response:
      example:
        patientId: patientId
        slotId: slotId
        message: message
      properties:
        patientId:
          title: patientId
          type: string
        slotId:
          title: slotId
          type: string
        message:
          title: message
          type: string
      title: _Appointments_delete_delete_200_response
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: JWT
      scheme: bearer
      type: http
