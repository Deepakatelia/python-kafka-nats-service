openapi: 3.0.0
info:
  description: SummaryGenerator-Service
  title: SummaryGenerator-OpenAPI
  version: 0.0.1
servers:
- description: Local Dev Server
  url: http://localhost:8082/
paths:
  /conversationsummary:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Conversation'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      summary: Process patient-doctor conversation and generate summary
      tags:
      - Summary-conversation
  /notessummary:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Notes'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Summary'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      summary: Summarize the notes
      tags:
      - Summary-notes
  /reportgenerator:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/textreportgenerator'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChartDto'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      summary: Generate the report definition
      tags:
      - Report-Generator
  /ScheduleAppointments:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/textScheduleAppointments'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppointmentDto'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      summary: Match the user input to the ScheduleAppointments schema.
      tags:
      - ScheduleAppointments
  /Creategoal:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/textCreategoal'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreategoalDto'
          description: Successful response
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MessageDto'
          description: The specified resource was not found
      summary: Match the user input to the Creategoal schema.
      tags:
      - CreateCareplan
components:
  responses:
    ResourceNotFoundError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageDto'
      description: The specified resource was not found
    UnauthorizedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MessageDto'
      description: Unauthorized
  schemas:
    textAssistant:
      properties:
        text:
          items:
            $ref: '#/components/schemas/messages'
          title: text
          type: array
      title: textAssistant
      type: object
    Assistantresponse:
      example:
        result: result
      properties:
        result:
          title: result
          type: string
      title: Assistantresponse
      type: object
    textScheduleAppointments:
      properties:
        text:
          items:
            $ref: '#/components/schemas/messages'
          title: text
          type: array
        patientId:
          title: patientId
          type: string
        doctorId:
          title: doctorId
          type: string
      required:
      - text
      title: textScheduleAppointments
      type: object
    AppointmentDto:
      example:
        appointmentType: 0
        patientName: patientName
        patientId: patientId
        appointmentStatus: true
        symptoms: symptoms
        patientImage: patientImage
        createdAt: 2000-01-23T04:56:07.000+00:00
        doctorName: doctorName
        connectyCubeId: connectyCubeId
        createdBy: createdBy
        doctorId: doctorId
        slotTime: slotTime
        slotId: slotId
        id: id
        appointmentDate: 2000-01-23
        doctorImage: doctorImage
        isExist: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          title: id
          type: string
        appointmentType:
          title: appointmentType
          type: integer
        appointmentStatus:
          title: appointmentStatus
          type: boolean
        appointmentDate:
          format: date
          title: appointmentDate
          type: string
        slotTime:
          title: slotTime
          type: string
        createdAt:
          format: date-time
          title: createdAt
          type: string
        createdBy:
          title: createdBy
          type: string
        doctorId:
          title: doctorId
          type: string
        symptoms:
          title: symptoms
          type: string
        slotId:
          title: slotId
          type: string
        patientId:
          title: patientId
          type: string
        doctorName:
          title: doctorName
          type: string
        doctorImage:
          title: doctorImage
          type: string
        patientImage:
          title: patientImage
          type: string
        patientName:
          title: patientName
          type: string
        updatedAt:
          format: date-time
          title: updatedAt
          type: string
        isExist:
          title: isExist
          type: boolean
        connectyCubeId:
          title: connectyCubeId
          type: string
      title: AppointmentDto
      type: object
    textCreategoal:
      properties:
        text:
          items:
            $ref: '#/components/schemas/messages'
          title: text
          type: array
        planId:
          title: planId
          type: string
        patientId:
          title: patientId
          type: string
      required:
      - patientId
      - planId
      - text
      title: textCreategoal
      type: object
    messages:
      properties:
        role:
          title: role
          type: string
        content:
          title: content
          type: string
      title: messages
      type: object
    CreategoalDto:
      example:
        goalTargetDate: 2000-01-23
        createdAt: 2000-01-23T04:56:07.000+00:00
        goalId: goalId
        patientId: patientId
        goalName: goalName
        progress: 0.8008281904610115
        planId: planId
        isExist: true
        isCompleted: true
        updatedAt: 2000-01-23T04:56:07.000+00:00
        goalPriority: goalPriority
        goalStartDate: 2000-01-23
      properties:
        createdAt:
          format: date-time
          nullable: true
          title: createdAt
          type: string
        goalId:
          title: goalId
          type: string
        goalName:
          title: goalName
          type: string
        isCompleted:
          title: isCompleted
          type: boolean
        progress:
          title: progress
          type: number
        updatedAt:
          format: date-time
          nullable: true
          title: updatedAt
          type: string
        goalPriority:
          title: goalPriority
          type: string
        goalStartDate:
          format: date
          title: goalStartDate
          type: string
        goalTargetDate:
          format: date
          title: goalTargetDate
          type: string
        isExist:
          title: isExist
          type: boolean
        patientId:
          title: patientId
          type: string
        planId:
          title: planId
          type: string
      title: CreategoalDto
      type: object
    CreateChartDto:
      example:
        visualization: TimeSeriesLine
        yAxis:
        - axisBorderColor: axisBorderColor
          axisTextColor: axisTextColor
          label: label
          columnName: columnName
        - axisBorderColor: axisBorderColor
          axisTextColor: axisTextColor
          label: label
          columnName: columnName
        xAxis:
          label: label
          columnName: columnName
        filters:
        - val: val
          op: op
          col: col
        - val: val
          op: op
          col: col
        title: title
        dataSource: dataSource
      properties:
        dataSource:
          title: dataSource
          type: string
        visualization:
          enum:
          - TimeSeriesLine
          title: visualization
          type: string
        title:
          title: title
          type: string
        xAxis:
          $ref: '#/components/schemas/CreateXAxisDto'
        yAxis:
          items:
            $ref: '#/components/schemas/CreateYAxisDto'
          title: yAxis
          type: array
        filters:
          items:
            $ref: '#/components/schemas/Filter'
          title: filters
          type: array
      title: CreateChartDto
    Filter:
      example:
        val: val
        op: op
        col: col
      properties:
        op:
          title: op
          type: string
        col:
          title: col
          type: string
        val:
          title: val
          type: string
      title: Filter
    CreateXAxisDto:
      example:
        label: label
        columnName: columnName
      properties:
        columnName:
          title: columnName
          type: string
        label:
          title: label
          type: string
      title: CreateXAxisDto
    CreateYAxisDto:
      example:
        axisBorderColor: axisBorderColor
        axisTextColor: axisTextColor
        label: label
        columnName: columnName
      properties:
        columnName:
          title: columnName
          type: string
        label:
          title: label
          type: string
        axisBorderColor:
          title: axisBorderColor
          type: string
        axisTextColor:
          title: axisTextColor
          type: string
      title: CreateYAxisDto
    textreportgenerator:
      properties:
        text:
          title: text
          type: string
      required:
      - text
      title: textreportgenerator
      type: object
    Notes:
      items:
        $ref: '#/components/schemas/Notes_inner'
      type: array
    MessageDto:
      properties:
        message:
          title: message
          type: string
      required:
      - message
      title: MessageDto
      type: object
    Conversation:
      items:
        $ref: '#/components/schemas/Conversation_inner'
      type: array
    Summary:
      example:
        summary: summary
      properties:
        summary:
          description: The generated summary
          title: summary
          type: string
      title: Summary
      type: object
    Notes_inner:
      properties:
        noteid:
          title: noteid
          type: string
        notetype:
          title: notetype
          type: string
        date:
          title: date
          type: string
        condition:
          title: condition
          type: string
        addedby:
          title: addedby
          type: string
        notes:
          title: notes
          type: string
      required:
      - noteid
      title: Notes_inner
      type: object
    Conversation_inner:
      properties:
        Doctor:
          title: Doctor
          type: string
        Patient:
          title: Patient
          type: string
      title: Conversation_inner
      type: object
