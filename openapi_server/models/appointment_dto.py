# coding: utf-8

from __future__ import annotations
from datetime import date, datetime  # noqa: F401

import re  # noqa: F401
from typing import Any, Dict, List, Optional  # noqa: F401

from pydantic import AnyUrl, BaseModel, EmailStr, Field, validator  # noqa: F401


class AppointmentDto(BaseModel):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.

    AppointmentDto - a model defined in OpenAPI

        id: The id of this AppointmentDto [Optional].
        appointment_type: The appointment_type of this AppointmentDto [Optional].
        appointment_status: The appointment_status of this AppointmentDto [Optional].
        appointment_date: The appointment_date of this AppointmentDto [Optional].
        slot_time: The slot_time of this AppointmentDto [Optional].
        created_at: The created_at of this AppointmentDto [Optional].
        created_by: The created_by of this AppointmentDto [Optional].
        doctor_id: The doctor_id of this AppointmentDto [Optional].
        symptoms: The symptoms of this AppointmentDto [Optional].
        slot_id: The slot_id of this AppointmentDto [Optional].
        patient_id: The patient_id of this AppointmentDto [Optional].
        doctor_name: The doctor_name of this AppointmentDto [Optional].
        doctor_image: The doctor_image of this AppointmentDto [Optional].
        patient_image: The patient_image of this AppointmentDto [Optional].
        patient_name: The patient_name of this AppointmentDto [Optional].
        updated_at: The updated_at of this AppointmentDto [Optional].
        is_exist: The is_exist of this AppointmentDto [Optional].
        connecty_cube_id: The connecty_cube_id of this AppointmentDto [Optional].
    """

    # id: Optional[str] = Field(alias="id", default=None)
    # appointment_type: Optional[int] = Field(alias="appointmentType", default=None)
    # appointment_status: Optional[bool] = Field(alias="appointmentStatus", default=None)
    # appointment_date: Optional[date] = Field(alias="appointmentDate", default=None)
    # slot_time: Optional[str] = Field(alias="slotTime", default=None)
    # created_at: Optional[datetime] = Field(alias="createdAt", default=None)
    # created_by: Optional[str] = Field(alias="createdBy", default=None)
    # doctor_id: Optional[str] = Field(alias="doctorId", default=None)
    # symptoms: Optional[str] = Field(alias="symptoms", default=None)
    # slot_id: Optional[str] = Field(alias="slotId", default=None)
    # patient_id: Optional[str] = Field(alias="patientId", default=None)
    # doctor_name: Optional[str] = Field(alias="doctorName", default=None)
    # doctor_image: Optional[str] = Field(alias="doctorImage", default=None)
    # patient_image: Optional[str] = Field(alias="patientImage", default=None)
    # patient_name: Optional[str] = Field(alias="patientName", default=None)
    # updated_at: Optional[datetime] = Field(alias="updatedAt", default=None)
    # is_exist: Optional[bool] = Field(alias="isExist", default=None)
    # connecty_cube_id: Optional[str] = Field(alias="connectyCubeId", default=None)
    role: Optional[str] = Field(alias="role", default=None)
    content: Optional[str] = Field(alias="content", default=None)

AppointmentDto.update_forward_refs()
