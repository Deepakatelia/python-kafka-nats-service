# coding: utf-8

"""
    SummaryGenerator-OpenAPI

    SummaryGenerator-Service

    The version of the OpenAPI document: 0.0.1
    Generated by: https://openapi-generator.tech
"""
import sys

from fastapi import FastAPI
from fastapi.middleware.cors import CORSMiddleware
from openapi_server.apis.create_careplan_api import router as CreateCareplanApiRouter
from openapi_server.apis.report_generator_api import router as ReportGeneratorApiRouter
from openapi_server.apis.schedule_appointments_api import router as ScheduleAppointmentsApiRouter
from openapi_server.apis.pre_authorization_api import router as PreAuthorizationApiRouter
from openapi_server.apis.intent_api import router as IntentApiRouter
from openapi_server.apis.summary_conversation_api import router as SummaryConversationApiRouter
from openapi_server.apis.summary_notes_api import router as SummaryNotesApiRouter
from openapi_server.apis.review_lab_summary_api import router as ReviewLabSummaryApiRouter
# app = FastAPI()
app = FastAPI(
    title="Report&SummaryGenerator-OpenAPI",
    description="Report&SummaryGenerator-Service",
    version="0.0.1",
    docs_url="/docs",
    redoc_url=None,
    openapi_url="/docs/swagger.json",
)
# Configure CORS

app.add_middleware(

    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)
def receive_signal(signalNumber, frame):
    print('Received:', signalNumber)
    sys.exit()


@app.on_event("startup")
async def startup_event():
    import signal
    signal.signal(signal.SIGINT, receive_signal)



app.include_router(CreateCareplanApiRouter)
app.include_router(IntentApiRouter)
app.include_router(ReviewLabSummaryApiRouter)
app.include_router(ReportGeneratorApiRouter)
app.include_router(PreAuthorizationApiRouter)
app.include_router(ScheduleAppointmentsApiRouter)
app.include_router(SummaryConversationApiRouter)
app.include_router(SummaryNotesApiRouter)
